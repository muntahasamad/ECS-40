//
//  main.cpp
//  Final
//
//  Created by Muntaha Samad on 8/7/14.
//  Copyright (c) 2014 Muntaha Samad. All rights reserved.
//

#include <iostream>
#include <array>
using namespace std;


//template <class T>
class Queue
{
    static const int size = 5;
    array<int, size> buffer;
    int front, back, count;
    
    
public:
    int pop_front();
    void push_back(const int element);
    Queue()
    {
        front = back = count = 0;
    }
    bool is_empty()
    {
        return count == 0;
    }
    bool is_full()
    {
        return count == size;
    }
    void display()
    {
        cout << "-----------" << endl;
        for (int i = front; i != back; i=(i+1)%size)
        {
            cout << buffer[i] << endl;
        }
        cout << "-----------" << endl;
    }
   
};

void Queue::push_back(const int element)
{
    if (is_full())
    {
        cerr << "Queue is full" << endl;
    }
    else
    {
        count++;
        buffer[back] = element;
        back = (back+1)%size;
    }
}
int Queue::pop_front()
{
    if (is_empty())
    {
        cerr << "Queue is empty" << endl;
        return -1;
    }
    else
    {
        int element = buffer[front];
        front = (front+1)%size;
        count--;
        return element;
    }
}

int main()
{
    Queue q;
    for (int i=0; i < 3; i++)
    {
        q.push_back(i);
        q.display();
    }
    for (int i = 0; i < 4; i++)
    {
        cout << q.pop_front() << endl;
    }
    for (int i=0; i < 5; i++)
    {
        q.push_back(i);
        q.display();
    }
    for (int i = 0; i < 5; i++)
    {
        cout << q.pop_front() << endl;
    }
    
}
